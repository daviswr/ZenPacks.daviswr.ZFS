name: ZenPacks.daviswr.ZFS

class_relationships:
  - Products.ZenModel.Device.Device(zpools) 1:MC ZPool(server)
  - ZPool(zrootVDevs) 1:MC ZRootVDev(zpool)
  - ZRootVDev(zstoreDevs) 1:MC ZStoreDev(zrootVDev)
  - ZPool(zfsDatasets) 1:MC ZFSDataset(zpool)

classes:
  DEFAULTS:
    base: [zenpacklib.Component]

  ZPool:
    label: ZFS Storage Pool
    short_label: Pool
    properties:
      DEFAULTS:
        grid_display: false
        details_display: false
      allocated:
        label: Allocated Space
        short_label: Allocated
        type: int
        renderer: Zenoss.render.bytesString
        datapoint: zpool-get_allocated
        grid_display: true
        details_display: true
      altroot:
        label: Alternate Root
        short_label: Alt Root
        type: string
      #ashift:
      #  type: int
      #  default: 0
      autoexpand:
        label: Automatic Expansion
        short_label: Auto-Expand
        type: boolean
        default: false
        details_display: true
      autoreplace:
        label: Automatic Device Replacement
        short_label: Auto-Replace
        type: boolean
        default: false
        details_display: true
      bootfs:
        label: Bootable Dataset
        short_label: Boot FS
        type: string
      cachefile:
        label: Config Cache File
        short_label: Cache
        type: string
        details_display: true
      capacity:
        label: Percent Used
        short_label: "Capacity %"
        # percent
        type: int
        datapoint: zpool-get_capacity
        grid_display: true
        details_display: true
      comment:
        label: Comment
        type: string
        details_display: true
      dedupditto:
        label: Block Ditto Threshold
        type: int
        default: 0
      dedupratio:
        label: Dedup Ratio
        type: float
        datapoint: zpool-get_dedupratio
        details_display: true
      delegation:
        label: Delegation
        type: boolean
        default: true
      errdata:
        type: int
      expandsize:
        label: Uninitialized Space
        short_label: Uninit
        type: string
        details_display: true
      failmode:
        label: Failure Mode
        type: string
        default: wait
      fragmentation:
        label: Fragmentation
        short_label: "Frag %"
        type: float
        datapoint: zpool-get_fragmentation
        grid_display: true
        details_display: true
      free:
        label: Free Space
        short_label: Free
        type: int
        renderer: Zenoss.render.bytesString
        datapoint: zpool-get_free
        grid_display: true
        details_display: true
      freeing:
        label: Reclaimable Space
        short_label: Reclaim
        type: int
        default: 0
      guid:
        label: GUID
        type: string
      health:
        # Can't be updated dynamically outside modeling
        label: Health
        type: string
      #leaked:
      #  label: Leaked
      #  type: int
      #  default: 0
      listsnapshots:
        label: List Snapshots
        type: boolean
        default: false
      readonly:
        label: Read-Only
        short_label: RO
        type: boolean
        grid_display: true
        details_display: true
      size:
        label: Total Space
        short_label: Space
        type: int
        renderer: Zenoss.render.bytesString
        grid_display: true
        details_display: true
      state:
        type: int
      version:
        label: Version
        short_label: Ver
        type: string
        details_display: true

  ZVDev:
    label: ZFS Virtual Device
    short_label: VDev
    properties:
      DEFAULTS:
        type: string
        grid_display: false
        details_display: false
      VDevType:
        label: Type
        # mirror, raidz, disk/file, spare(?)
        details_display: true
      ashift:
        type: int
      guid:
        label: GUID
      id:
        label: ID
      path:
        label: Path
        details_display: true
      whole_disk:
        label: Whole Disk
        type: boolean
        details_display: true

  ZRootVDev:
    base: [ZVDev]
    label: ZFS Root Virtual Device
    short_label: Root VDev
    properties:
      DEFAULTS:
        grid_display: false
        details_display: false
      asize:
        label: Allocable Space
        short_label: Space
        type: int
        renderer: Zenoss.render.bytesString
        grid_display: true
        details_display: true
      is_cache:
        label: Cache Device
        short_label: Cache
        type: boolean
        default: false
        details_display: true
      is_log:
        label: Log Device
        short_label: Log
        type: boolean
        default: false
        details_display: true

  ZStoreDev:
    base: [ZVDev]
    label: ZFS Storage Device
    short_label: Store
    properties:
      DEFAULTS:
        grid_display: false
        details_display: false

  ZFSDataset:
    label: ZFS Dataset
    short_label: Dataset
    properties:
      DEFAULTS:
        grid_display: false
        details_display: false
      zDsType:
        label: Dataset Type
        type: string
        default: Dataset
      aclinherit:
        label: ACL Inheritance
        type: string
        default: restricted
      acltype:
        label: ACL Type
        type: string
        default: noacl
      available:
        label: Available Space
        short_label: Available
        type: int
        renderer: Zenoss.render.bytesString
        datapoint: zfs-get_available
        grid_display: true
        details_display: true
      atime:
        label: Access Time
        short_label: atime
        type: boolean
        default: true
      canmount:
        label: Mountable
        type: string
        details_display: true
      checksum:
        label: Checksum
        type: string
        default: on
      compression:
        label: Compression
        short_label: Compress
        type: string
        default: off
        details_display: true
      copies:
        label: Data Copies
        short_label: Copies
        type: int
        default: 1
        details_display: true
      creation:
        label: Creation Time
        short_label: Created
        # Convert from Unix time in modeler
        type: string
        details_display: true
      dedup:
        label: Deduplication
        short_label: Dedup
        type: string
        default: off
        details_display: true
      filesystem_count:
        label: Child Datasets
        short_label: Children
        type: int
      filesystem_limit:
        label: Maximum Filesystems
        short_label: Max FS
        type: int
      logbias:
        label: Log Bias
        type: string
        default: latency
      logicalreferenced:
        label: Logical Accessible Space
        short_label: Logical Accessible
        type: int
        renderer: Zenoss.render.bytesString
        datapoint: zfs-get_logicalreferenced
        details_display: true
      logicalused:
        label: Logical Used Space
        short_label: Logical Used
        type: int
        renderer: Zenoss.render.bytesString
        datapoint: zfs-get_logicalused
        details_display: true
      mlslabel:
        label: Trusted Ext Zone Label
        short_label: Zone Label
        type: string
        default: none
      primarycache:
        label: ARC
        type: string
        default: all
        details_display: true
      quota:
        label: Space Quota
        short_label: Quota
        type: int
        renderer: Zenoss.render.bytesString
        default: 0
        details_display: true
      redundant_metadata:
        label: Redundant Metadata
        type: string
        default: all
        details_display: true
      refcompressratio:
        label: Referenced Compression Ratio
        short_label: Ref Compress
        type: float
        details_display: true
      referenced:
        label: Referenced Data
        short_label: Referenced
        type: int
        renderer: Zenoss.render.bytesString
        datapoint: zfs-referenced
        details_display: true
      refquota:
        label: Reference Quota
        short_label: Ref Quota
        type: int
        renderer: Zenoss.render.bytesString
        default: 0
        details_display: true
      refreserveration:
        label: Reference Reservation
        short_label: Ref Reserved
        type: int
        renderer: Zenoss.render.bytesString
        default: 0
        details_display: true
      relatime:
        label: Relative Access Time
        short_label: relatime
        type: boolean
        default: false
      reservation:
        label: Reservation
        short_label: Reserved
        type: int
        renderer: Zenoss.render.bytesString
        default: 0
        details_display: true
      secondarycache:
        label: L2ARC
        type: string
        default: all
        details_display: true
      snapdev:
        label: Snapshot Devices
        short_label: Snap Dev
        type: string
        default: hidden
      snapdir:
        label: Snapshot Directory
        short_label: Snap Dir
        type: string
        default: hidden
      snapshot_count:
        label: Snapshots
        type: int
      snapshot_limit:
        label: Maximum Snapshots
        short_label: Max Snaps
        type: int
      sync:
        label: Synchronous Requests
        short_label: Sync
        type: string
        default: standard
      used:
        label: Used Space
        short_label: Used
        type: int
        renderer: Zenoss.render.bytesString
        datapoint: zfs-get_used
        grid_display: true
        details_display: true
      usedbychildren:
        label: Used by Children
        short_label: Child Used
        type: int
        renderer: Zenoss.render.bytesString
        datapoint: zfs-get_usedbychildren
        details_display: true
      usedbydataset:
        label: Used by Dataset
        short_label: Dataset Used
        type: int
        renderer: Zenoss.render.bytesString
        datapoint: zfs-get_usedbydataset
        details_display: true
      usedbyrefreservation:
        label: Used by Ref Reservation
        short_label: Ref Used
        type: int
        renderer: Zenoss.render.bytesString
        datapoint: zfs-get_usedbyrefreservation
        details_display: true
      usedbysnapshots:
        label: Used by Snapshots
        short_label: Used Snap
        type: int
        renderer: Zenoss.render.bytesString
        datapoint: zfs-get_usedbysnapshots
        details_display: true
      vscan:
        label: Virus Scan
        type: boolean
        default: false
        details_display: true
      written:
        label: Reference Space Written
        short_label: Written
        type: int
        renderer: Zenoss.render.bytesString
        details_display: true
      zoned:
        label: Non-Global Zone
        short_label: Zoned
        type: boolean
        default: false
        details_display: true

  ZFSSnap:
    base: [ZFSDataset]
    label: ZFS Snapshot
    short_label: Snapshot
    properties:
      DEFAULTS:
        grid_display: false
        details_display: false
      clones:
        label: Clones
        type: string
        details_display: true
      defer_destroy:
        label: Deferred Destruction
        type: boolean
        default: false
      userrefs:
        label: User Holds
        type: int
      
  ZFSVol:
    base: [ZFSDataset]
    label: ZFS Volume
    short_label: Volume
    properties:
      DEFAULTS:
        grid_display: false
        details_display: false
      compressratio:
        label: Compression Ratio
        short_label: Compress
        type: float
        details_display: true
      origin:
        label: Origin Snapshot
        short_label: Origin
        type: string
        details_display: true
      shareisci:
        label: iSCSI Target
        short_label: iSCSI
        type: string
        default: off
        details_display: true
      volblocksize:
        label: Block Size
        short_label: Block
        type: int
        default: 8192
      volsize:
        label: Logical Size
        short_label: Vol Size
        type: int
        renderer: Zenoss.render.bytesString
        grid_display: true
        details_display: true

  ZFS:
    base: [ZFSDataset]
    label: ZFS File System
    short_label: File System
    properties:
      DEFAULTS:
        grid_display: false
        details_display: false
      casesensitivity:
        label: Case Sensitivity
        short_label: Case
        type: string
        default: sensitive
      compressratio:
        label: Compression Ratio
        short_label: Compress
        type: float
        details_display: true
      context:
        label: SELinux File Context
        short_label: File Context
        type: string
        default: none
      defcontext:
        label: SELinux Default Context
        short_label: Default Context
        type: string
        default: none
      devices:
        label: Device Nodes
        short_label: Devices
        type: boolean
        default: true
      exec:
        label: Execution
        short_label: Exec
        type: boolean
        default: true
      fscontext:
        label: SELinux Filesystem Context
        short_label: FS Context
        type: string
        default: none
      mounted:
        label: Mounted
        type: boolean
        default: true
        grid_display: true
        details_display: true
      mountpoint:
        label: Mount Point
        short_label: Path
        type: string
        grid_display: true
        details_display: true
      nbmand:
        label: Non-Blocking Mandatory Locks
        type: boolean
        default: false
      normalization:
        label: Unicode Normalization
        type: string
        default: none
      origin:
        label: Origin Snapshot
        short_label: Origin
        type: string
        details_display: true
      overlay:
        label: Overlay Mount
        short_label: Overlay
        type: boolean
        default: false
      recordsize:
        label: Block Size
        short_label: Block
        type: int
        default: 131072
      rootcontext:
        label: SELinux Root Inode Context
        short_label: Root Inode Context
        type: string
        default: none
      setiud:
        label: Set UID
        type: boolean
        default: true
      sharenfs:
        label: NFS Share
        short_label: NFS
        type: string
        default: off
        grid_display: true
        details_display: true
      sharesmb:
        label: SMB Share
        short_label: SMB
        type: string
        default: off
        grid_display: true
        details_display: true
      version:
        label: Version
        short_label: Ver
        type: string
        details_display: true
      utf8only:
        label: UTF-8 Only
        short_label: UTF8
        type: boolean
        default: false
      xattr:
        label: Extended Attributes
        short_label: XAttr
        type: string
        default: on
        details_display: true


device_classes:
  /:
    remove: false
    templates:
      ZFSStoragePool:
        targetPythonClass: ZenPacks.daviswr.ZFS.ZPool
        datasources:
          DEFAULTS:
            type: COMMAND
            # usessh doesn't seem to inherit
            cycletime: 60
            component: "${here/id}"
          zpool-get:
            usessh: true
            commandTemplate: "/usr/bin/sudo /sbin/zpool get -pH all"
            parser: ZenPacks.daviswr.ZFS.parsers.zpool.get
            datapoints:
              allocated: GAUGE
              capacity: GAUGE
              dedupratio: GAUGE
              fragmentation: GAUGE
              free: GAUGE
          zpool-iostat:
            usessh: true
            commandTemplate: "/usr/bin/sudo /sbin/zpool iostat -y 1 1"
            parser: ZenPacks.daviswr.ZFS.parsers.zpool.iostat
            datapoints:
              bw-read: GAUGE
              bw-write: GAUGE
              op-read: GAUGE
              op-write: GAUGE
        graphs:
          DEFAULTS:
            miny: 0
          Activity:
            units: IOPS
            graphpoints:
              Writes:
                dpName: zpool-iostat_op-write
                lineType: AREA
                stacked: true
                colorindex: 0
              Reads:
                dpName: zpool-iostat_op-read
                lineType: LINE
                lineWidth: 1
                colorindex: 1
          Throughput:
            units: bytes/sec
            base: true
            graphpoints:
              Written:
                dpName: zpool-iostat_bw-write
                lineType: AREA
                stacked: true
                colorindex: 0
              Read:
                dpName: zpool-iostat_bw-read
                lineType: LINE
                lineWidth: 1
                colorindex: 1
          Capacity:
            units: bytes
            base: true
            graphpoints:
              DEFAULTS:
                lineType: AREA
                stacked: true
              Allocated:
                dpName: zpool-get_allocated
                colorindex: 0
              Free:
                dpName: zpool-get_free
                color: cccccc
          Percent Capacity:
            units: percentage
            graphpoints:
              Used:
                dpName: zpool-get_capacity
                lineType: LINE
                lineWidth: 2
                colorindex: 0
          Fragmentation:
            units: percentage
            graphpoints:
              Fragmentation:
                dpName: zpool-get_fragmentation
                lineType: LINE
                lineWidth: 2
                colorindex: 0
          Dedup Ratio:
            units: ratio
            graphpoints:
              Dedup:
                dpName: zpool-get_dedupratio
                lineType: LINE
                lineWidth: 2
                colorindex: 0

      ZFSDataset:
        targetPythonClass: ZenPacks.daviswr.ZFS.ZFSDataset
        datasources:
          zfs-get:
            type: COMMAND
            usessh: true
            commandTemplate: "/usr/bin/sudo /sbin/zfs get -pH all"
            parser: ZenPacks.daviswr.ZFS.parsers.zfs.get
            cycletime: 60
            component: "${here/id}"
            datapoints:
              available: GAUGE
              logicalreferenced: GAUGE
              logicalused: GAUGE
              referenced: GAUGE
              used: GAUGE
              usedbychildren: GAUGE
              usedbydataset: GAUGE
              usedbyrefreservation: GAUGE
              usedbysnapshots: GAUGE
        graphs:
          DEFAULTS:
            miny: 0
            units: bytes
            base: true
          Capacity:
            graphpoints:
              DEFAULTS:
                lineType: AREA
                stacked: true
              Used:
                dpName: zfs-get_used
                colorindex: 0
              Available:
                dpName: zfs-get_available
                color: cccccc
          Used By:
            graphpoints:
              DEFAULTS:
                lineType: AREA
                stacked: true
              Dataset:
                dpName: zfs-get_usedbydataset
                colorindex: 0
              Reference:
                dpName: zfs-get_usedbyrefreservation
                colorindex: 1
              Snapshots:
                dpName: zfs-get_usedbysnapshots
                colorindex: 2
              Children:
                dpName: zfs-get_usedbychildren
                colorindex: 3
          Logical Capacity:
            # TODO: work out stacking, RPN, etc
            graphpoints:
              Used:
                dpName: zfs-get_logicalused
                lineType: AREA
                stacked: true
                colorindex: 0
              Accessible:
                dpName: zfs-get_logicalreferenced
                lineType: LINE
                lineWidth: 1
                colorindex: 1
