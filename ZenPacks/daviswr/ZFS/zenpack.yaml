name: ZenPacks.daviswr.ZFS

class_relationships:
  - Products.ZenModel.Device.Device(zpools) 1:MC ZPool(server)
  - ZPool(zrootVDevs) 1:MC ZRootVDev(zpool)
  - ZRootVDev(zstoreDevs) 1:MC ZStoreDev(zrootVDev)
  - ZPool(zfsDatasets) 1:MC ZFSDataset(zpool)

classes:
  DEFAULTS:
    base: [zenpacklib.Component]

  ZPool:
    label: ZFS Storage Pool
    short_label: Pool
    order: 10
    relationships:
      zrootVDevs:
        label_width: 60
        content_width: 60
      zfsDatasets:
        label_width: 60
        content_width: 60
    properties:
      DEFAULTS:
        grid_display: false
        details_display: false
      allocated:
        label: Allocated Space
        short_label: Allocated
        type: int
        renderer: Zenoss.render.bytesString
        datapoint: zpool-get_allocated
        grid_display: true
        details_display: true
        order: 3
      altroot:
        label: Alternate Root
        short_label: Alt Root
        type: string
      #ashift:
      #  type: int
      #  default: 0
      autoexpand:
        label: Automatic Expansion
        short_label: Auto-Expand
        type: boolean
        default: false
        details_display: true
        order: 9
      autoreplace:
        label: Automatic Device Replacement
        short_label: Auto-Replace
        type: boolean
        default: false
        details_display: true
        order: 11
      bootfs:
        label: Bootable Dataset
        short_label: Boot FS
        type: string
      cachefile:
        label: Config Cache File
        short_label: Cache
        type: string
        details_display: true
        order: 10
      capacity:
        label: Percent Used
        short_label: "Capacity %"
        # percent
        type: int
        datapoint: zpool-get_capacity
        grid_display: true
        details_display: true
        content_width: 50
        label_width: 50
        order: 5
      comment:
        label: Comment
        type: string
        details_display: true
        order: 16
      dedupditto:
        label: Block Ditto Threshold
        type: int
        default: 0
      dedupratio:
        label: Dedup Ratio
        type: float
        datapoint: zpool-get_dedupratio
        details_display: true
        order: 7
      delegation:
        label: Delegation
        type: boolean
        default: true
      errdata:
        type: int
      expandsize:
        label: Uninitialized Space
        short_label: Uninit
        type: int
        renderer: Zenoss.render.bytesString
        default: 0
        details_display: true
        order: 7
      failmode:
        label: Failure Mode
        type: string
        default: wait
      feature_bookmarks:
        label: Bookmarks
        type: string
        default: unsupported
        details_display: true
        order: 13
      feature_encryption:
        label: Encryption
        short_label: Crypto
        type: string
        default: unsupported
        details_display: true
        order: 14
      feature_lz4_compress:
        label: LZ4 Compression
        short_label: LZ4
        type: string
        default: unsupported
      fragmentation:
        label: Fragmentation Percentage
        short_label: "Frag %"
        type: float
        datapoint: zpool-get_fragmentation
        grid_display: true
        details_display: true
        content_width: 30
        label_width: 30
        order: 6
      free:
        label: Free Space
        short_label: Free
        type: int
        renderer: Zenoss.render.bytesString
        datapoint: zpool-get_free
        grid_display: true
        details_display: true
        order: 4
      freeing:
        label: Reclaimable Space
        short_label: Reclaim
        type: int
        default: 0
      guid:
        label: GUID
        type: string
      health:
        label: Health
        type: string
        default: ONLINE
      #leaked:
      #  label: Leaked
      #  type: int
      #  default: 0
      listsnapshots:
        label: List Snapshots
        type: boolean
        default: false
      readonly:
        label: Read-Only
        short_label: RO
        type: boolean
        details_display: true
        label_width: 25
        content_width: 25
        order: 12
      size:
        label: Total Space
        short_label: Space
        type: int
        renderer: Zenoss.render.bytesString
        grid_display: true
        details_display: true
        order: 2
      state:
        type: int
      version:
        label: Version
        short_label: Ver
        type: string
        details_display: true
        order: 15
      CriticalThreshold:
        label: Critical Usage Percentage
        short_label: "Critical %"
        default: 90
        editable: true
        details_display: true
        order: 32
      ErrorThreshold:
        label: Error Usage Percentage
        short_label: "Error %"
        default: 85
        editable: true
        details_display: true
        order: 31
      HealthState:
        label: State
        type: int
        datapoint: zpool-status_health
        enum:
          1: "ONLINE"
          2: "AVAIL"
          3: "INUSE"
          4: "DEGRADED"
          5: "FAULTED"
          6: "OFFLINE"
          7: "UNAVAIL"
          8: "REMOVED"
          9: "SUSPENDED"
        grid_display: true
        details_display: true
        order: 1
      PrivEscCmd:
        type: string
        default: ""
      WarningThreshold:
        label: Warning Usage Percentage
        short_label: "Warning %"
        default: 80
        editable: true
        details_display: true
        order: 30
      ZdbPath:
        type: string
        default: /sbin/zdb
      ZpoolPath:
        type: string
        default: /sbin/zpool

  ZVDev:
    label: ZFS Virtual Device
    short_label: VDev
    order: 11
    properties:
      DEFAULTS:
        type: string
        grid_display: false
        details_display: false
      ZpoolPath:
        type: string
        default: /sbin/zpool
      PrivEscCmd:
        type: string
        default: ""
      VDevType:
        label: Type
        # mirror, raidz, disk/file, spare(?)
        details_display: true
        order: 11
      ashift:
        type: int
      health:
        label: Health
        default: ONLINE
      guid:
        label: GUID
      id:
        label: ID
      path:
        label: Path
        details_display: true
        order: 10
      pool:
        label: ZPool
      whole_disk:
        label: Whole Disk
        type: boolean
        details_display: true
        order: 12
      # Seems to not display correctly unless defined at each child class, too
      HealthState:
        label: State
        type: int
        datapoint: zpool-status_health
        enum:
          1: "ONLINE"
          2: "AVAIL"
          3: "INUSE"
          4: "DEGRADED"
          5: "FAULTED"
          6: "OFFLINE"
          7: "UNAVAIL"
          8: "REMOVED"
          9: "SUSPENDED"
        grid_display: true
        details_display: true
        order: 1

  ZRootVDev:
    base: [ZVDev]
    label: ZFS Root Virtual Device
    short_label: Root VDev
    order: 12
    relationships:
      zstoreDevs:
        content_width: 45
        label_width: 45
    properties:
      DEFAULTS:
        grid_display: false
        details_display: false
      asize:
        label: Allocable Space
        short_label: Space
        type: int
        renderer: Zenoss.render.bytesString
        grid_display: true
        details_display: true
        order: 9
      HealthState:
        label: State
        type: int
        datapoint: zpool-status_health
        enum:
          1: "ONLINE"
          2: "AVAIL"
          3: "INUSE"
          4: "DEGRADED"
          5: "FAULTED"
          6: "OFFLINE"
          7: "UNAVAIL"
          8: "REMOVED"
          9: "SUSPENDED"
        grid_display: true
        details_display: true
        order: 1

  ZCacheDev:
    base: [ZRootVDev]
    label: ZFS Cache Device
    short_label: Cache Dev
    order: 13
    properties:
      DEFAULTS:
        grid_display: false
        details_display: false
      HealthState:
        label: State
        type: int
        datapoint: zpool-status_health
        enum:
          1: "ONLINE"
          2: "AVAIL"
          3: "INUSE"
          4: "DEGRADED"
          5: "FAULTED"
          6: "OFFLINE"
          7: "UNAVAIL"
          8: "REMOVED"
          9: "SUSPENDED"
        grid_display: true
        details_display: true
        order: 1

  ZLogDev:
    base: [ZRootVDev]
    label: ZFS Log Device
    short_label: Log Dev
    order: 14
    properties:
      DEFAULTS:
        grid_display: false
        details_display: false
      HealthState:
        label: State
        type: int
        datapoint: zpool-status_health
        enum:
          1: "ONLINE"
          2: "AVAIL"
          3: "INUSE"
          4: "DEGRADED"
          5: "FAULTED"
          6: "OFFLINE"
          7: "UNAVAIL"
          8: "REMOVED"
          9: "SUSPENDED"
        grid_display: true
        details_display: true
        order: 1

  ZSpareDev:
    base: [ZRootVDev]
    label: ZFS Spare Device
    short_label: Spare Dev
    order: 15
    properties:
      DEFAULTS:
        grid_display: false
        details_display: false
      health:
        type: string
        default: AVAIL
      HealthState:
        label: State
        type: int
        datapoint: zpool-status_health
        enum:
          1: "ONLINE"
          2: "AVAIL"
          3: "INUSE"
          4: "DEGRADED"
          5: "FAULTED"
          6: "OFFLINE"
          7: "UNAVAIL"
          8: "REMOVED"
          9: "SUSPENDED"
        grid_display: true
        details_display: true
        order: 1

  ZStoreDev:
    base: [ZVDev]
    label: ZFS Storage Device
    short_label: Store Dev
    order: 16
    properties:
      DEFAULTS:
        grid_display: false
        details_display: false
      HealthState:
        label: State
        type: int
        datapoint: zpool-status_health
        enum:
          1: "ONLINE"
          2: "AVAIL"
          3: "INUSE"
          4: "DEGRADED"
          5: "FAULTED"
          6: "OFFLINE"
          7: "UNAVAIL"
          8: "REMOVED"
          9: "SUSPENDED"
        grid_display: true
        details_display: true
        order: 1

  ZFSDataset:
    label: ZFS Dataset
    short_label: Dataset
    order: 20
    relationships:
      zpool:
        grid_display: false
    properties:
      DEFAULTS:
        grid_display: false
        details_display: false
      ZfsPath:
        type: string
        default: /sbin/zfs
      PrivEscCmd:
        type: string
        default: ""
      zDsType:
        label: Dataset Type
        type: string
        default: Dataset
      aclinherit:
        label: ACL Inheritance
        type: string
        default: restricted
      acltype:
        label: ACL Type
        type: string
        default: noacl
      available:
        label: Available Space
        short_label: Available
        type: int
        renderer: Zenoss.render.bytesString
        datapoint: zfs-get_available
        grid_display: true
        details_display: true
        order: 10
      atime:
        label: Access Time
        short_label: atime
        type: boolean
        default: true
      canmount:
        label: Mountable
        type: string
        details_display: true
        order: 3
      checksum:
        label: Checksum
        type: string
        default: on
      compression:
        label: Compression
        short_label: Compress
        type: string
        default: off
        details_display: true
        order: 28
      copies:
        label: Data Copies
        short_label: Copies
        type: int
        default: 1
        details_display: true
        order: 26
      creation:
        label: Creation Time
        short_label: Created
        # Convert from Unix time in modeler
        type: string
        details_display: true
        order: 1
      dedup:
        label: Deduplication
        short_label: Dedup
        type: string
        default: off
        details_display: true
        order: 27
      encryption:
        label: Encryption
        short_label: Crypto
        type: string
        default: unsupported
        details_display: true
      filesystem_count:
        label: Child Datasets
        short_label: Children
        type: int
      filesystem_limit:
        label: Maximum Filesystems
        short_label: Max FS
        type: int
      keysource:
        label: Key Source
        short_label: Key Src
        type: string
        default: unsupported
        details_display: true
      keylocation:
        label: Key Location
        short_label: Key Loc
        type: string
        default: unsupported
        details_display: true
      keyformat:
        label: Key Format
        type: string
        default: unsupported
        details_display: true
      logbias:
        label: Log Bias
        type: string
        default: latency
      logicalreferenced:
        label: Logical Accessible Space
        short_label: Logical Accessible
        type: int
        renderer: Zenoss.render.bytesString
        datapoint: zfs-get_logicalreferenced
        details_display: true
        order: 17
      logicalused:
        label: Logical Used Space
        short_label: Logical Used
        type: int
        renderer: Zenoss.render.bytesString
        datapoint: zfs-get_logicalused
        details_display: true
        order: 16
      mlslabel:
        label: Trusted Ext Zone Label
        short_label: Zone Label
        type: string
        default: none
      primarycache:
        label: ARC
        type: string
        default: all
        details_display: true
        order: 35
      quota:
        label: Space Quota
        short_label: Quota
        type: int
        renderer: Zenoss.render.bytesString
        default: 0
        details_display: true
        order: 18
      redundant_metadata:
        label: Redundant Metadata
        type: string
        default: all
        details_display: true
        order: 25
      refcompressratio:
        label: Referenced Compression Ratio
        short_label: Ref Compress
        type: float
        details_display: true
        order: 24
      referenced:
        label: Referenced Data
        short_label: Referenced
        type: int
        renderer: Zenoss.render.bytesString
        datapoint: zfs-referenced
        details_display: true
        order: 21
      refquota:
        label: Reference Quota
        short_label: Ref Quota
        type: int
        renderer: Zenoss.render.bytesString
        default: 0
        details_display: true
        order: 23
      refreserveration:
        label: Reference Reservation
        short_label: Ref Reserved
        type: int
        renderer: Zenoss.render.bytesString
        default: 0
        details_display: true
        order: 22
      rekeydate:
        label: Re-key Date
        short_label: Re-keyed
        type: string
        default: unsupported
        details_display: true
      relatime:
        label: Relative Access Time
        short_label: relatime
        type: boolean
        default: false
      reservation:
        label: Reservation
        short_label: Reserved
        type: int
        renderer: Zenoss.render.bytesString
        default: 0
        details_display: true
        order: 19
      secondarycache:
        label: L2ARC
        type: string
        default: all
        details_display: true
        order: 36
      snapdev:
        label: Snapshot Devices
        short_label: Snap Dev
        type: string
        default: hidden
      snapdir:
        label: Snapshot Directory
        short_label: Snap Dir
        type: string
        default: hidden
      snapshot_count:
        label: Snapshots
        type: int
      snapshot_limit:
        label: Maximum Snapshots
        short_label: Max Snaps
        type: int
      sync:
        label: Synchronous Requests
        short_label: Sync
        type: string
        default: standard
      used:
        label: Used Space
        short_label: Used
        type: int
        renderer: Zenoss.render.bytesString
        datapoint: zfs-get_used
        grid_display: true
        details_display: true
        order: 11
      usedbychildren:
        label: Used by Children
        short_label: Child Used
        type: int
        renderer: Zenoss.render.bytesString
        datapoint: zfs-get_usedbychildren
        details_display: true
        order: 15
      usedbydataset:
        label: Used by Dataset
        short_label: Dataset Used
        type: int
        renderer: Zenoss.render.bytesString
        datapoint: zfs-get_usedbydataset
        details_display: true
        order: 12
      usedbyrefreservation:
        label: Used by Ref Reservation
        short_label: Ref Used
        type: int
        renderer: Zenoss.render.bytesString
        datapoint: zfs-get_usedbyrefreservation
        details_display: true
        order: 13
      usedbysnapshots:
        label: Used by Snapshots
        short_label: Used Snap
        type: int
        renderer: Zenoss.render.bytesString
        datapoint: zfs-get_usedbysnapshots
        details_display: true
        order: 14
      vscan:
        label: Virus Scan
        type: boolean
        default: false
        details_display: true
        order: 37
      written:
        label: Reference Space Written
        short_label: Written
        type: int
        renderer: Zenoss.render.bytesString
        details_display: true
        order: 20
      zoned:
        label: Non-Global Zone
        short_label: Zoned
        type: boolean
        default: false
        details_display: true
        order: 38

  ZFSSnap:
    base: [ZFSDataset]
    label: ZFS Snapshot
    short_label: Snapshot
    order: 23
    properties:
      DEFAULTS:
        grid_display: false
        details_display: false
      clones:
        label: Clones
        type: string
        details_display: true
        order: 3
      defer_destroy:
        label: Deferred Destruction
        type: boolean
        default: false
      userrefs:
        label: User Holds
        type: int

  ZFSVol:
    base: [ZFSDataset]
    label: ZFS Volume
    short_label: Volume
    order: 22
    properties:
      DEFAULTS:
        grid_display: false
        details_display: false
      compressratio:
        label: Compression Ratio
        short_label: Compress
        type: float
        details_display: true
        order: 30
      origin:
        label: Origin Snapshot
        short_label: Origin
        type: string
        default: "N/A"
        details_display: true
        order: 3
      shareisci:
        label: iSCSI Target
        short_label: iSCSI
        type: string
        default: off
        grid_display: true
        details_display: true
        content_width: 30
        label_width: 30
        order: 7
      volblocksize:
        label: Block Size
        short_label: Block
        type: int
        default: 8192
      volsize:
        label: Logical Size
        short_label: Vol Size
        type: int
        renderer: Zenoss.render.bytesString
        grid_display: true
        details_display: true
        order: 5

  ZFS:
    base: [ZFSDataset]
    label: ZFS File System
    short_label: File System
    order: 21
    properties:
      DEFAULTS:
        grid_display: false
        details_display: false
      casesensitivity:
        label: Case Sensitivity
        short_label: Case
        type: string
        default: sensitive
      compressratio:
        label: Compression Ratio
        short_label: Compress
        type: float
        details_display: true
        order: 30
      context:
        label: SELinux File Context
        short_label: File Context
        type: string
        default: none
      defcontext:
        label: SELinux Default Context
        short_label: Default Context
        type: string
        default: none
      devices:
        label: Device Nodes
        short_label: Devices
        type: boolean
        default: true
      # ZPL doesn't like this name
      #exec:
      #  label: Execution
      #  short_label: Exec
      #  type: boolean
      #  default: true
      fscontext:
        label: SELinux Filesystem Context
        short_label: FS Context
        type: string
        default: none
      mounted:
        label: Mounted
        type: boolean
        default: true
        enum:
          true: "clear"
          false: "debug"
        renderer: Zenoss.render.severity
        grid_display: true
        content_width: 40
        label_width: 40
        order: 6
      mountpoint:
        label: Mount Point
        short_label: Path
        type: string
        grid_display: true
        details_display: true
        order: 5
      nbmand:
        label: Non-Blocking Mandatory Locks
        type: boolean
        default: false
      normalization:
        label: Unicode Normalization
        type: string
        default: none
      origin:
        label: Origin Snapshot
        short_label: Origin
        type: string
        default: "N/A"
        details_display: true
        order: 3
      overlay:
        label: Overlay Mount
        short_label: Overlay
        type: boolean
        default: false
      recordsize:
        label: Block Size
        short_label: Block
        type: int
        default: 131072
      rootcontext:
        label: SELinux Root Inode Context
        short_label: Root Inode Context
        type: string
        default: none
      setiud:
        label: Set UID
        type: boolean
        default: true
      sharenfs:
        label: NFS Share
        short_label: NFS
        type: string
        default: off
        grid_display: true
        details_display: true
        content_width: 30
        label_width: 30
        order: 7
      sharesmb:
        label: SMB Share
        short_label: SMB
        type: string
        default: off
        grid_display: true
        details_display: true
        content_width: 30
        label_width: 30
        order: 8
      version:
        label: Version
        short_label: Ver
        type: string
        details_display: true
        order: 50
      utf8only:
        label: UTF-8 Only
        short_label: UTF8
        type: boolean
        default: false
      xattr:
        label: Extended Attributes
        short_label: XAttr
        type: string
        default: on
        details_display: true
        order: 45


zProperties:
  DEFAULTS:
    category: ZFS
  zZFSDatasetIgnoreNames:
    type: string
  zZFSDatasetIgnoreTypes:
    type: lines
  zZPoolIgnoreNames:
    type: string
  # These have been deprecated in favor of per-pool thresholds
  # and will be removed by v1.0
  zZPoolThresholdWarning:
    type: int
    default: 101
  zZPoolThresholdError:
    type: int
    default: 101
  zZPoolThresholdCritical:
    type: int
    default: 101
  # These were never released in an egg,
  # will be entirely removed from YAML by v1.0
  # zZFSExecPrefix:
  #   type: string
  #   default: /usr/bin/sudo
  # zZFSBinaryPath:
  #   type: string
  #   default: /sbin/zfs
  # zZPoolBinaryPath:
  #   type: string
  #   default: /sbin/zpool
  # zZdbBinaryPath:
  #   type: string
  #   default: /sbin/zdb

device_classes:
  /:
    remove: false
    templates:
      ZFSStoragePool:
        targetPythonClass: ZenPacks.daviswr.ZFS.ZPool
        datasources:
          DEFAULTS:
            type: COMMAND
            # usessh doesn't seem to inherit
            cycletime: 60
            component: "${here/id}"
          zpool-get:
            usessh: true
            commandTemplate: |-
              $$ZENOTHING
              ${here/PrivEscCmd} ${here/ZpoolPath} get -pH all
            parser: ZenPacks.daviswr.ZFS.parsers.zpool.get
            datapoints:
              allocated: GAUGE
              capacity: GAUGE
              dedupratio: GAUGE
              fragmentation: GAUGE
              free: GAUGE
          zpool-iostat:
            usessh: true
            commandTemplate: |-
              $$ZENOTHING
              ${here/PrivEscCmd} ${here/ZpoolPath} iostat -y -v 10 1
            parser: ZenPacks.daviswr.ZFS.parsers.zpool.iostat
            datapoints:
              bw-read: GAUGE
              bw-write: GAUGE
              op-read: GAUGE
              op-write: GAUGE
          zpool-status:
            usessh: true
            commandTemplate: |-
              $$ZENOTHING
              ${here/PrivEscCmd} ${here/ZpoolPath} status -v "${here/title}" | grep -e "${here/title}" -e state -e status -e scrub -e scan -e error
            parser: ZenPacks.daviswr.ZFS.parsers.zpool.status
            datapoints:
              health: GAUGE
              scrub: GAUGE
              error-read: GAUGE
              error-write: GAUGE
              error-cksum: GAUGE

        thresholds:
          Capacity-Warning:
            type: MinMaxThreshold
            enabled: true
            dsnames:
              - zpool-get_capacity
            severity: 3
            eventClass: /Status/ZFS
            maxval: here.WarningThreshold
          Capacity-Error:
            type: MinMaxThreshold
            enabled: true
            dsnames:
              - zpool-get_capacity
            severity: 4
            eventClass: /Status/ZFS
            maxval: here.ErrorThreshold
          Capacity-Critical:
            type: MinMaxThreshold
            enabled: true
            dsnames:
              - zpool-get_capacity
            severity: 5
            eventClass: /Status/ZFS
            maxval: here.CriticalThreshold
          Health:
            type: MinMaxThreshold
            enabled: true
            dsnames:
              - zpool-status_health
            severity: 4
            eventClass: /Status/ZFS
            minval: 1
            maxval: 2
          Scrub:
            type: MinMaxThreshold
            enabled: true
            dsnames:
              - zpool-status_scrub
            severity: 3
            eventClass: /Status/ZFS
            minval: 1
            maxval: 1

        graphs:
          DEFAULTS:
            miny: 0
          Activity:
            units: IOPS
            graphpoints:
              Writes:
                dpName: zpool-iostat_op-write
                lineType: AREA
                stacked: true
                colorindex: 0
              Reads:
                dpName: zpool-iostat_op-read
                lineType: LINE
                lineWidth: 1
                colorindex: 1
          Throughput:
            units: bytes/sec
            base: true
            graphpoints:
              Written:
                dpName: zpool-iostat_bw-write
                lineType: AREA
                stacked: true
                colorindex: 0
              Read:
                dpName: zpool-iostat_bw-read
                lineType: LINE
                lineWidth: 1
                colorindex: 1
          Errors:
            units: errors
            base: true
            graphpoints:
              DEFAULTS:
                lineType: LINE
                lineWidth: 2
              Write:
                dpName: zpool-status_error-write
                colorindex: 0
              Read:
                dpName: zpool-status_error-read
                colorindex: 1
              Checksum:
                dpName: zpool-status_error-cksum
                colorindex: 3
          Capacity:
            units: bytes
            base: true
            graphpoints:
              DEFAULTS:
                lineType: AREA
                stacked: true
              Allocated:
                dpName: zpool-get_allocated
                colorindex: 0
              Free:
                dpName: zpool-get_free
                color: cccccc
          Percent Capacity:
            units: percentage
            graphpoints:
              Used:
                dpName: zpool-get_capacity
                lineType: LINE
                lineWidth: 2
                colorindex: 0
          Fragmentation:
            units: percentage
            graphpoints:
              Fragmentation:
                dpName: zpool-get_fragmentation
                lineType: LINE
                lineWidth: 2
                colorindex: 0
          Dedup Ratio:
            units: ratio
            graphpoints:
              Dedup:
                dpName: zpool-get_dedupratio
                lineType: LINE
                lineWidth: 2
                colorindex: 0


      ZFSVirtualDevice:
        targetPythonClass: ZenPacks.daviswr.ZFS.ZVDev
        datasources:
          DEFAULTS:
            type: COMMAND
            cycletime: 60
            component: "${here/id}"
          zpool-iostat:
            usessh: true
            commandTemplate: |-
              $$ZENOTHING
              ${here/PrivEscCmd} ${here/ZpoolPath} iostat -y -v 10 1
            parser: ZenPacks.daviswr.ZFS.parsers.zpool.iostat
            datapoints:
              bw-read: GAUGE
              bw-write: GAUGE
              op-read: GAUGE
              op-write: GAUGE
          zpool-status:
            usessh: true
            # This may not catch log devices. Further testing required
            commandTemplate: |-
              $$ZENOTHING
              ${here/PrivEscCmd} ${here/ZpoolPath} status -v "${here/pool}" | grep "${here/title}"
            parser: ZenPacks.daviswr.ZFS.parsers.zpool.status
            datapoints:
              health: GAUGE
              error-read: GAUGE
              error-write: GAUGE
              error-cksum: GAUGE

        thresholds:
          Health:
            type: MinMaxThreshold
            enabled: true
            dsnames:
              - zpool-status_health
            severity: 4
            eventClass: /Status/ZFS
            minval: 1
            maxval: 2

        graphs:
          DEFAULTS:
            miny: 0
          Activity:
            units: IOPS
            graphpoints:
              Writes:
                dpName: zpool-iostat_op-write
                lineType: AREA
                stacked: true
                colorindex: 0
              Reads:
                dpName: zpool-iostat_op-read
                lineType: LINE
                lineWidth: 1
                colorindex: 1
          Throughput:
            units: bytes/sec
            base: true
            graphpoints:
              Written:
                dpName: zpool-iostat_bw-write
                lineType: AREA
                stacked: true
                colorindex: 0
              Read:
                dpName: zpool-iostat_bw-read
                lineType: LINE
                lineWidth: 1
                colorindex: 1
          Errors:
            units: errors
            base: true
            graphpoints:
              DEFAULTS:
                lineType: LINE
                lineWidth: 2
              Write:
                dpName: zpool-status_error-write
                colorindex: 0
              Read:
                dpName: zpool-status_error-read
                colorindex: 1
              Checksum:
                dpName: zpool-status_error-cksum
                colorindex: 3


      ZFSDataset:
        targetPythonClass: ZenPacks.daviswr.ZFS.ZFSDataset
        datasources:
          DEFAULTS:
            type: COMMAND
            cycletime: 60
            component: "${here/id}"
          zfs-get:
            usessh: true
            commandTemplate: |-
              $$ZENOTHING
              ${here/PrivEscCmd} ${here/ZfsPath} get -pH all "${here/title}"
            parser: ZenPacks.daviswr.ZFS.parsers.zfs.get
            datapoints:
              available: GAUGE
              logicalreferenced: GAUGE
              logicalused: GAUGE
              referenced: GAUGE
              used: GAUGE
              usedbychildren: GAUGE
              usedbydataset: GAUGE
              usedbyrefreservation: GAUGE
              usedbysnapshots: GAUGE

        graphs:
          DEFAULTS:
            miny: 0
            units: bytes
            base: true
          Capacity:
            graphpoints:
              DEFAULTS:
                lineType: AREA
                stacked: true
              Used:
                dpName: zfs-get_used
                colorindex: 0
              Available:
                dpName: zfs-get_available
                color: cccccc
          Used By:
            graphpoints:
              DEFAULTS:
                lineType: AREA
                stacked: true
              Dataset:
                dpName: zfs-get_usedbydataset
                colorindex: 0
              Reference:
                dpName: zfs-get_usedbyrefreservation
                colorindex: 1
              Snapshots:
                dpName: zfs-get_usedbysnapshots
                colorindex: 2
              Children:
                dpName: zfs-get_usedbychildren
                colorindex: 3
          Logical Capacity:
            graphpoints:
              Used:
                dpName: zfs-get_logicalused
                lineType: AREA
                stacked: true
                colorindex: 0
              Accessible:
                dpName: zfs-get_logicalreferenced
                lineType: LINE
                lineWidth: 1
                colorindex: 1


event_classes:
  /Status/ZFS:
    remove: true
    description: ZFS events
    transform: |-
      from zenoss.protocols.protobufs.zep_pb2 import (
          SEVERITY_CLEAR,
          SEVERITY_DEBUG,
          SEVERITY_INFO,
          SEVERITY_WARNING,
          SEVERITY_ERROR,
          SEVERITY_CRITICAL
          )

      current = int(float(evt.current))

      if evt.eventKey == 'zpool-status|zpool-status_health|Health':
          # Match values in the zool.iostat.status parser
          health_map = {
              1: 'ONLINE',
              2: 'AVAIL',
              3: 'INUSE',
              4: 'DEGRADED',
              5: 'FAULTED',
              6: 'OFFLINE',
              7: 'UNAVAIL',
              8: 'REMOVED',
              9: 'SUSPENDED',
              }

          health = health_map.get(current, 'UNKNOWN')

          if component and hasattr(component, 'health'):
              @transact
              def updateDb():
                  component.health = health
              updateDb()

          if component and component.id and component.title:
              if component.id.startswith('pool_'):
                  comp_name = 'Pool {0}'.format(component.title)
              elif (hasattr(component, 'pool')
                      and (component.title.startswith('mirror')
                           or component.title.startswith('raid'))):
                  comp_name = '{0} {1}'.format(component.pool, component.title)
              else:
                  comp_name = component.title
          else:
              comp_name = 'State'
          evt.summary = '{0} is {1}'.format(comp_name, health)

          # https://docs.oracle.com/cd/E19253-01/819-5461/gamno/index.html
          # https://docs.oracle.com/cd/E19253-01/819-5461/gcvcw/index.html
          severities = {
              # The device or virtual device is in normal working order
              'ONLINE': SEVERITY_CLEAR,
              # Available hot spare
              'AVAIL': SEVERITY_CLEAR,
              # Hot spare that is currently in use
              'INUSE': SEVERITY_INFO,
              # The virtual device has experienced a failure but can still function
              'DEGRADED': SEVERITY_ERROR,
              # The device or virtual device is completely inaccessible
              'FAULTED': SEVERITY_CRITICAL,
              # The device has been explicitly taken offline by the administrator
              'OFFLINE': SEVERITY_ERROR,
              # The device or virtual device cannot be opened
              'UNAVAIL': SEVERITY_CRITICAL,
              # The device was physically removed while the system was running
              'REMOVED': SEVERITY_CRITICAL,
              'SUSPENDED': SEVERITY_CRITICAL,
              }

          evt.severity = severities.get(health, SEVERITY_ERROR)
          evt.eventClass = '/Status'

      elif evt.eventKey == 'zpool-status|zpool-status_scrub|Scrub':
          pool_name = component.title if component and component.title \
              else evt.component

          # Match values in the zool.iostat.status parser
          scrub_map = {
              1: 'complete',
              2: 'scrub',
              3: 'resilver',
              }

          scrub_status = scrub_map.get(current, '')
          if 'complete' == scrub_status:
              summary = 'scrub or resilver completed'
          elif scrub_status:
              summary = '{0} in progress'.format(scrub_status)
          else:
              summary = 'scrub or resilver status is unknown'
          evt.summary = 'Pool {0} {1}'.format(pool_name, summary)

          severities = {
              'complete': SEVERITY_CLEAR,
              'scrub': SEVERITY_INFO,
              'resilver': SEVERITY_ERROR,
              }

          evt.severity = severities.get(scrub_status, SEVERITY_WARNING)
          evt.eventClass = '/Storage'

      elif evt.eventKey.startswith('zpool-get|zpool-get_capacity'):
          pool_name = component.title if component and component.title \
              else evt.component
          evt.summary = 'Pool {0} {1}% allocated'.format(pool_name, current)
          evt.eventClass = '/Storage'


process_class_organizers:
  ZFS:
    remove: true
    process_classes:
      DEFAULTS:
        excludeRegex: "\\b(vim|tail|grep|tar|cat|bash)\\b"
        fail_severity: 4
      arc:
        description: ZFS Adaptive Replacement Cache
        includeRegex: arc_
      metaslab:
        description: ZFS Metaslabs
        includeRegex: metaslab_
      spl:
        description: Solaris Porting Layer
        includeRegex: spl_
      zed:
        description: ZFS Event Daemon
        includeRegex: zed
        replaceRegex: "\\/.*\\/(zed).*"
        replacement: "\\1"
      zfs:
        description: ZFS system tasks
        includeRegex: "z_\\w+"
        replaceRegex: "(\\D+)_?\\d?"
        replacement: "\\1"
      zil:
        description: ZFS Intent Log
        includeRegex: zil_
